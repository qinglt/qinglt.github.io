[{"title":"Hello World","url":"/2022/04/29/hello-world/","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"git常用命令","url":"/2022/04/29/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css\"><h1 id=\"撤销对文件的修改\"><a href=\"#撤销对文件的修改\" class=\"headerlink\" title=\"撤销对文件的修改\"></a>撤销对文件的修改</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout --  index.html</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"取消暂存的文件\"><a href=\"#取消暂存的文件\" class=\"headerlink\" title=\"取消暂存的文件\"></a>取消暂存的文件</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset HEAD index.html</span><br><span class=\"line\"></span><br><span class=\"line\">git reset HEAD .</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"跳过暂存区直接提交到仓库\"><a href=\"#跳过暂存区直接提交到仓库\" class=\"headerlink\" title=\"跳过暂存区直接提交到仓库\"></a>跳过暂存区直接提交到仓库</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git commit -a -m &quot;描述信息&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"查看已加入本地仓库的文件\"><a href=\"#查看已加入本地仓库的文件\" class=\"headerlink\" title=\"查看已加入本地仓库的文件\"></a>查看已加入本地仓库的文件</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git ls-files</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"移除文件\"><a href=\"#移除文件\" class=\"headerlink\" title=\"移除文件\"></a>移除文件</h1><h3 id=\"从git仓库和工作区间同时移除index-html文件\"><a href=\"#从git仓库和工作区间同时移除index-html文件\" class=\"headerlink\" title=\"从git仓库和工作区间同时移除index.html文件\"></a>从git仓库和工作区间同时移除index.html文件</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rm -f index.html</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"只从git仓库中移除index-html-但保留工作区中的-index-html\"><a href=\"#只从git仓库中移除index-html-但保留工作区中的-index-html\" class=\"headerlink\" title=\"只从git仓库中移除index.html 但保留工作区中的 index.html\"></a>只从git仓库中移除index.html 但保留工作区中的 index.html</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git rm --cached index.html</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"删除test文件夹流程\"><a href=\"#删除test文件夹流程\" class=\"headerlink\" title=\"删除test文件夹流程\"></a>删除test文件夹流程</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.将远程仓库里面的项目拉下来</span><br><span class=\"line\"></span><br><span class=\"line\">$git pull origin main</span><br><span class=\"line\"></span><br><span class=\"line\">2.删除test文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">$git rm -f --cached test</span><br><span class=\"line\"></span><br><span class=\"line\">4.提交，添加说明</span><br><span class=\"line\"></span><br><span class=\"line\">$git commit -m &quot;删除test&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">5.将本次更改更新到远程仓库</span><br><span class=\"line\"></span><br><span class=\"line\">$git push</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"忽略文件-gitignore\"><a href=\"#忽略文件-gitignore\" class=\"headerlink\" title=\"忽略文件.gitignore\"></a>忽略文件.gitignore</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.以#开头的是注释</span><br><span class=\"line\"></span><br><span class=\"line\">2.以/结尾的是目录</span><br><span class=\"line\"></span><br><span class=\"line\">3.以/开头的是防止递归</span><br><span class=\"line\"></span><br><span class=\"line\">4.以!开头的是表示取反</span><br><span class=\"line\"></span><br><span class=\"line\">5.可以使用glob模式进行文件夹和文件的匹配</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"glob模式是指简化可的正则表达式\"><a href=\"#glob模式是指简化可的正则表达式\" class=\"headerlink\" title=\"glob模式是指简化可的正则表达式\"></a>glob模式是指简化可的正则表达式</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.星号* 2.[abc] 3.问号? 4.两个星号**</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"gitignore文件的例子\"><a href=\"#gitignore文件的例子\" class=\"headerlink\" title=\".gitignore文件的例子\"></a>.gitignore文件的例子</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#忽略所有的.a文件</span><br><span class=\"line\"></span><br><span class=\"line\">*.a</span><br><span class=\"line\"></span><br><span class=\"line\">#但跟踪所有的lib.a文件，即使你在前面忽略了.a文件</span><br><span class=\"line\"></span><br><span class=\"line\">!lib.a</span><br><span class=\"line\"></span><br><span class=\"line\">#只忽略当前目录下的TODO文件，而不忽略subdir/TODO</span><br><span class=\"line\"></span><br><span class=\"line\">/TODO </span><br><span class=\"line\"></span><br><span class=\"line\">#忽略任何目录下名为build的文件夹</span><br><span class=\"line\"></span><br><span class=\"line\">build/</span><br><span class=\"line\"></span><br><span class=\"line\">#忽略doc/notes/txt ，但不忽略 doc/server/arch.txt</span><br><span class=\"line\"></span><br><span class=\"line\">doc/*.txt</span><br><span class=\"line\"></span><br><span class=\"line\">#忽略doc/目录及其所有子目录下的.pdf文件</span><br><span class=\"line\"></span><br><span class=\"line\">doc/**/*.pdf</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"查看提交历史\"><a href=\"#查看提交历史\" class=\"headerlink\" title=\"查看提交历史\"></a>查看提交历史</h1><blockquote>\n<p>按时间先后顺序列出所有的提交历史，最近的提交排在最上面</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>只展示最新的两条提交历史,数字可以按需填写</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log -2</span><br></pre></td></tr></table></figure>\n\n\n\n<blockquote>\n<p>在一行上展示最近两条提交的历史信息</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log -2 --pretty=oneline</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"在一行上展示最近的两条提交历史信息-并自定义输出的格式\"><a href=\"#在一行上展示最近的两条提交历史信息-并自定义输出的格式\" class=\"headerlink\" title=\"在一行上展示最近的两条提交历史信息,并自定义输出的格式\"></a>在一行上展示最近的两条提交历史信息,并自定义输出的格式</h3><blockquote>\n<p> %h 提交的简写哈希值 %an 作者名字  %ar 作者修订日期，按多久以前的方式显示  %s 提交说明 </p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log -2 --pretty=format:&quot;%h | %an | %ar | %s&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"回退到指定的版本\"><a href=\"#回退到指定的版本\" class=\"headerlink\" title=\"回退到指定的版本\"></a>回退到指定的版本</h1><h3 id=\"在一行上展示所有的提交历史\"><a href=\"#在一行上展示所有的提交历史\" class=\"headerlink\" title=\"在一行上展示所有的提交历史\"></a>在一行上展示所有的提交历史</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git log --pretty=oneline</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"使用git-reset-–hard-命令，根据指定的提交ID-回退到指定的版本\"><a href=\"#使用git-reset-–hard-命令，根据指定的提交ID-回退到指定的版本\" class=\"headerlink\" title=\"使用git reset –hard 命令，根据指定的提交ID 回退到指定的版本\"></a>使用git reset –hard 命令，根据指定的提交ID 回退到指定的版本</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;CommitID&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"在旧版本中使用-git-reflog-–pretty-x3D-oneline-命令，查看命令操作的历史\"><a href=\"#在旧版本中使用-git-reflog-–pretty-x3D-oneline-命令，查看命令操作的历史\" class=\"headerlink\" title=\"在旧版本中使用 git reflog –pretty&#x3D;oneline 命令，查看命令操作的历史\"></a>在旧版本中使用 git reflog –pretty&#x3D;oneline 命令，查看命令操作的历史</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reflog --pretty=oneline</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"再次根据最新的提交ID-跳转到最新的版本\"><a href=\"#再次根据最新的提交ID-跳转到最新的版本\" class=\"headerlink\" title=\"再次根据最新的提交ID 跳转到最新的版本\"></a>再次根据最新的提交ID 跳转到最新的版本</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git reset --hard &lt;CommitID&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h1><p>主分支上不进行代码开发，已经开发完成的功能分支会在合并后结束生命</p>\n<h2 id=\"查看所有分支的命令\"><a href=\"#查看所有分支的命令\" class=\"headerlink\" title=\"查看所有分支的命令\"></a>查看所有分支的命令</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch   -a</span><br><span class=\"line\"></span><br><span class=\"line\">所在分支前会有*标识</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"创建分支\"><a href=\"#创建分支\" class=\"headerlink\" title=\"创建分支\"></a>创建分支</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch 分支名</span><br><span class=\"line\"></span><br><span class=\"line\">执行完后  还是处在当前分支，并未到达新建分支 </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"切换分支\"><a href=\"#切换分支\" class=\"headerlink\" title=\"切换分支\"></a>切换分支</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"分支的快速创建和切换\"><a href=\"#分支的快速创建和切换\" class=\"headerlink\" title=\"分支的快速创建和切换\"></a>分支的快速创建和切换</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout -b 分支名</span><br><span class=\"line\"></span><br><span class=\"line\">实际就是是  git branch 分支名  git branch 分支名  这两条命令的合并</span><br><span class=\"line\"></span><br><span class=\"line\">创建分支时总是以主分支为基础来进行创建和切换分支 </span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"合并分支\"><a href=\"#合并分支\" class=\"headerlink\" title=\"合并分支\"></a>合并分支</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.先切换到main分支：git checkout main</span><br><span class=\"line\"></span><br><span class=\"line\">2.在main上运行git merge test命令 将test 分支上的代码合并到main分支</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"删除本地分支\"><a href=\"#删除本地分支\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch -d 分支名</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"遇到冲突时的分支合并\"><a href=\"#遇到冲突时的分支合并\" class=\"headerlink\" title=\"遇到冲突时的分支合并\"></a>遇到冲突时的分支合并</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1。假设在test分支合并到main期间，代码发生了冲突</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout main</span><br><span class=\"line\"></span><br><span class=\"line\">git merge test</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2.打开包含冲突的文件，手动解决后，再执行如下命令</span><br><span class=\"line\"></span><br><span class=\"line\">git add .</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m &quot;解决了分支合并冲突的问题&quot;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"远程分支操作\"><a href=\"#远程分支操作\" class=\"headerlink\" title=\"远程分支操作\"></a>远程分支操作</h1><h2 id=\"第一次把本地分支推送到远程仓库，需要运行如下命令\"><a href=\"#第一次把本地分支推送到远程仓库，需要运行如下命令\" class=\"headerlink\" title=\"第一次把本地分支推送到远程仓库，需要运行如下命令\"></a>第一次把本地分支推送到远程仓库，需要运行如下命令</h2><h3 id=\"只在第一次推送的时候需要加-u-参数：-u-表示把本地分支和远程分支进行关联\"><a href=\"#只在第一次推送的时候需要加-u-参数：-u-表示把本地分支和远程分支进行关联\" class=\"headerlink\" title=\"只在第一次推送的时候需要加 -u 参数：-u 表示把本地分支和远程分支进行关联\"></a>只在第一次推送的时候需要加 -u 参数：-u 表示把本地分支和远程分支进行关联</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git  push -u  远程仓库名别名  本地分支名:远程分支名</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"实操\"><a href=\"#实操\" class=\"headerlink\" title=\"实操\"></a>实操</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push -u origin payment:pay</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"如果希望远程分支的名称和本地分支名称保持一致，可以对命令进行简化：\"><a href=\"#如果希望远程分支的名称和本地分支名称保持一致，可以对命令进行简化：\" class=\"headerlink\" title=\"如果希望远程分支的名称和本地分支名称保持一致，可以对命令进行简化：\"></a>如果希望远程分支的名称和本地分支名称保持一致，可以对命令进行简化：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git push -u origin payment </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"查看远程仓库中所有的分支列表\"><a href=\"#查看远程仓库中所有的分支列表\" class=\"headerlink\" title=\"查看远程仓库中所有的分支列表\"></a>查看远程仓库中所有的分支列表</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote show 远程仓库名</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"跟踪分支\"><a href=\"#跟踪分支\" class=\"headerlink\" title=\"跟踪分支\"></a>跟踪分支</h1><h3 id=\"是指从远程仓库中-，把远程分支下载到本地仓库中。命令如下：\"><a href=\"#是指从远程仓库中-，把远程分支下载到本地仓库中。命令如下：\" class=\"headerlink\" title=\"是指从远程仓库中 ，把远程分支下载到本地仓库中。命令如下：\"></a>是指从远程仓库中 ，把远程分支下载到本地仓库中。命令如下：</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1.把对应的而远程分支下载到本地仓库，保持本地分支和远程分支名称相同：</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout  远程分支名     示例： git  checkout  pay</span><br><span class=\"line\"></span><br><span class=\"line\">2.把对应的远程分支下载到本地仓库，并把下载的本地分支进行重命名：</span><br><span class=\"line\"></span><br><span class=\"line\">git  checkout  -b  本地分支名  远程仓库名/远程分支名</span><br><span class=\"line\"></span><br><span class=\"line\">示例：git  checkout -b payment  origin/pay</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"拉取远程分支最新代码\"><a href=\"#拉取远程分支最新代码\" class=\"headerlink\" title=\"拉取远程分支最新代码\"></a>拉取远程分支最新代码</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git  pull </span><br><span class=\"line\"></span><br><span class=\"line\">更新当前分支与远程 分支保持一致</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"删除远程仓库指定分支\"><a href=\"#删除远程仓库指定分支\" class=\"headerlink\" title=\"删除远程仓库指定分支\"></a>删除远程仓库指定分支</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git  push   远程仓库名 --delete  远程分支名称</span><br><span class=\"line\"></span><br><span class=\"line\">示例：git  push  origin  --delete pay</span><br></pre></td></tr></table></figure>\n\n\n\n<h3 id=\"删除本地分支-1\"><a href=\"#删除本地分支-1\" class=\"headerlink\" title=\"删除本地分支\"></a>删除本地分支</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">git branch -d 分支名</span><br><span class=\"line\"></span><br><span class=\"line\">没被合并的分支 在执行删除操作时会报error    run&#x27;git branch -D 分支名&#x27;</span><br></pre></td></tr></table></figure>\n\n\n","categories":["Java"],"tags":["git"]}]